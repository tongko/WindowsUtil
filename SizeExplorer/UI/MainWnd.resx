<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imglIcon.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imglIcon.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAADw
        CQAAAk1TRnQBSQFMAgEBAgEAAQgBAAEIAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEgBgABEB4AAV8BbgF0AYcBaAF9AYcBpwEhASIBIwEvNAADKgFIAzEBYAMxAWADMQFg
        AzEBYAMxAWADMQFgAzEBYAMxAWADMQFgAyoBSJAAAhMBFAEYAXoB2QHyAf8BmwHQAeUB/wE8AUMBSQFy
        AS0BLwExAUUBOAE9AT8BUQFwAZEBngG4AYkB0AHoAf8BdAHLAeUB/wEsAi4BRQMUARwDAgEDFAAB8AHr
        AeQB/wHgAdYByAH/AeAB1gHIAf8B4AHWAcgB/wHgAdYByAH/AeAB1gHIAf8B4AHWAcgB/wHgAdYByAH/
        AeAB1gHIAf8B4AHWAcgB/wMxAWCQAAGUAdQB6gH/AXEB3AH2Af8BnQHRAeYB/wFZAZQBrAH/AWQBsgHH
        Af8BWAG8AdMB/wFUAcQB3gH/AUsBzQHpAf8BWAHKAd8B/wGEAdcB7AH/AycBQAMbASgDAwEEEAAB8AHr
        AeQB/wHgAdYByAH/AeAB1gHIAf8B4AHWAcgB/wHgAdYByAH/AeAB1gHIAf8B4AHWAcgB/wHgAdYByAH/
        AeAB1gHIAf8B4AHWAcgB/wMxAWCMAAF+AZoBpQG8AX4B3QH5Af8BdgHeAfcB/wGgAdMB5wH/AUYBlAGt
        Af8BWgGwAcgB/wFaAbwB1AH/AVMBxAHfAf8BTAHNAeoB/wFiAdQB7AH/AYcB2AHtAf8DIgE1Ax4BLQMQ
        ARYDAQECDAAB8AHrAeQB/wHgAdYByAH/AeAB1gHIAf8B4AHWAcgB/wHgAdYByAH/AeAB1gHIAf8B4AHW
        AcgB/wHgAdYByAH/AeAB1gHIAf8B4AHWAcgB/wMxAWCMAAGiAdUB6AH/AYcB3wH6Af8BgQHiAfgB/wGi
        AdUB6AH/AUQBlAGtAf8BVwGwAccB/wFdAb0B1QH/AVoBxwHhAf8BVAHPAesB/wFqAdYB7QH/AYoB2gHu
        Af8DGQEkAxQBGwMNARIDBgEIDAAB8AHrAeQB/wHgAdYByAH/AeAB1gHIAf8B4AHWAcgB/wHgAdYByAH/
        AeAB1gHIAf8B4AHWAcgB/wHgAdYByAH/AeAB1gHIAf8B4AHWAcgB/wMxAWCMAAGlAdcB6gH/AY4B4QH7
        Af8BjQHnAfoB/wGfAdkB7QH/AUcBlAGuAf8BWQGtAcUB/wFlAcAB1wH/AWQByAHgAf8BYQHSAewB/wF1
        AdkB7wH/AY4B3AHuAf8DDQERAwcBCgMCAQMQAAHwAesB5AH/AeAB1gHIAf8B4AHWAcgB/wHgAdYByAH/
        AeAB1gHIAf8B4AHWAcgB/wHgAdYByAH/AeAB1gHIAf8B4AHWAcgB/wHgAdYByAH/AzEBYIwAAagB2QHr
        Af8BlQHlAf0B/wGaAe0B/AH/AZYB6gH6Af8BSgGVAa4B/wFeAawBxQH/AW0BwwHZAf8BbQHMAeIB/wFu
        AdcB7wH/AYAB3QHwAf8BYwF/AYYBmwMCAQMYAAHwAesB5AH/AeAB1gHIAf8B4AHWAcgB/wHgAdYByAH/
        AeAB1gHIAf8B4AHWAcgB/wHgAdYByAH/AeAB1gHIAf8B4AHWAcgB/wHgAdYByAH/AzEBYIwAAasB2gHt
        Af8BmwHnAf0B/wGmAfIB/QH/Aa4B8QH9Af8BTgGXAa8B/wFjAa8BxgH/AXQBxwHbAf8BdwHQAeUB/wF7
        AdsB8QH/AaIB5gH1Af8DBAEGHAAB8AHrAeQB/wHgAdYByAH/AeAB1gHIAf8B4AHWAcgB/wHgAdYByAH/
        AeAB1gHIAf8B4AHWAcgB/wHgAdYByAH/AeAB1gHIAf8B4AHWAcgB/wMxAWCMAAGuAdwB7wH/AZ4B6QH+
        Af8BrwH2Av8BwQH2Af4B/wFSAZgBsAH/AWgBswHHAf8BfAHJAd4B/wGDAdQB6AH/AYcB3gHyAf8BrQHq
        AfcB/yAAAfAB6wHkAf8B4AHWAcgB/wHgAdYByAH/AeAB1gHIAf8B4AHWAcgB/wHgAdYByAH/AeAB1gHI
        Af8B4AHWAcgB/wHgAdYByAH/AeAB1gHIAf8DMQFgjAABsQHeAfAB/wGeAekB/gH/AbIB9wL/AdIB+gL/
        AVUBmgGyAf8BbgG1AcoB/wGEAc0B3wH/AYoB2AHqAf8BkQHhAfQB/wG8Ae4B+QH/IAAB8AHrAeQB/wHg
        AdYByAH/AeAB1gHIAf8B4AHWAcgB/wHgAdYByAH/AeAB1gHIAf8B4AHWAcgB/wHgAdYByAH/AeAB1gHI
        Af8B4AHWAcgB/wMxAWCMAAG0AeAB8gH/AZ4B6QH+Af8BsgH3Av8B3gH8Av8BWQGdAbMB/wF1AboBzQH/
        AYoB0QHiAf8BkQHbAewB/wGaAeQB9QH/AcoB8gH6Af8gAAP9Af8D/QH/A/0B/wP9Af8D/AH/A/wB/wP8
        Af8DsgH/A6kB/wOvAf8DIwE3jAABtgHiAfMB/wGeAekB/gH/AbIB9wL/AfwD/wFgAaIBuAH/AYABxAHW
        Af8BkgHVAeYB/wGZAd4B7wH/AaAB5wH2Af8BzwHzAfoB/yAAA/4B/wH9Av4B/wP9Af8B/AL9Af8D/AH/
        A/wB/wH7AvwB/wPOAf8D6wH/A08BfwMCAQOMAAG5AeMB9AH/AZ4B6QH+Af8BsgH3Av8B+gH+Av8BcQG1
        AccB/wGMAc4B3gH/AaIB5gH0Af8BqAHpAfcB/wGrAeoB9wH/AdcB9QH8Af8gAAH/Av4B/wQAA/0B/wQA
        AfwC/QH/BAAD/AH/A8MB/wNNAX4DAgEDkAABuwHlAfUB/wGeAekB/gH/Ac8B+QH+Af8BmQHNAd8B/wGS
        AdgB5wH/AagB6wH3Af8BsQHtAfkB/wHEAfIB+wH/Ad8B+AH9Af8B3gH4Af0B/yAAA9YB/wH2AvMB/wPW
        Af8B9gLzAf8D1gH/AfYC8wH/A9YB/wHDAsEB/wMCAQOUAAG8AeYB9gH/AbUB8AH8Af8BpQHYAeUB/wG6
        Ae4B9wH/AbkB8AH4Af8BqQHsAfcB/wGMAdwB5wH1AWQBiQGPAZ8BRAFRAVQBYAMMAQ/YAAEiAiMBKgFa
        AW4BcQF/ARMCFAEY8AABQgFNAT4HAAE+AwABKAMAAUADAAEQAwABAQEAAQEFAAGAFwAD/wEAAeMB/wHg
        AQMEAAHAAQMB4AEDBAABwAEBAeABAwQAAYABAAHgAQMEAAGAAQAB4AEDBAABgAEBAeABAwQAAYABBwHg
        AQMEAAGAAQ8B4AEDBAABgAEfAeABAwQAAYABHwHgAQMEAAGAAR8B4AEDBAABgAEfAeABAwQAAYABHwHq
        AYcEAAGAAR8B4AEPBAABgAEfAv8EAAGPA/8EAAs=
</value>
  </data>
</root>