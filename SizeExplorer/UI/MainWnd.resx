<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imglIcon.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imglIcon.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAC4
        CQAAAk1TRnQBSQFMAgEBAgEAASABAQEgAQEBEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEgBgABEB4AA0kBhwNSAacDIAEvNAADLgFIAzkBYAM5AWADOQFgAzkBYAM5AWADOQFg
        AzkBYAM5AWADOQFgAy4BSJAAAxIBGAFXAdkB8gH/AZsB0AHlAf8DQQFyAy0BRQMyAVEDVwG4AYkB0AHo
        Af8BUQHLAeUB/wMtAUUDFAEcAwIBAxQAAfAB6wHkAf8B4AHWAcgB/wHgAdYByAH/AeAB1gHIAf8B4AHW
        AcgB/wHgAdYByAH/AeAB1gHIAf8B4AHWAcgB/wHgAdYByAH/AeAB1gHIAf8DOQFgkAABlAHUAeoB/wFO
        AdwB9gH/AZ0B0QHmAf8BNgGUAawB/wFBAbIBxwH/ATUBvAHTAf8BMQHEAd4B/wEoAc0B6QH/ATUBygHf
        Af8BhAHXAewB/wMqAUADHAEoAwMBBBAAAfAB6wHkAf8B4AHWAcgB/wHgAdYByAH/AeAB1gHIAf8B4AHW
        AcgB/wHgAdYByAH/AeAB1gHIAf8B4AHWAcgB/wHgAdYByAH/AeAB1gHIAf8DOQFgjAADWAG8AVsB3QH5
        Af8BUwHeAfcB/wGgAdMB5wH/ASMBlAGtAf8BNwGwAcgB/wE3AbwB1AH/ATABxAHfAf8BKQHNAeoB/wE/
        AdQB7AH/AYcB2AHtAf8DJAE1Ax8BLQMQARYDAQECDAAB8AHrAeQB/wHgAdYByAH/AeAB1gHIAf8B4AHW
        AcgB/wHgAdYByAH/AeAB1gHIAf8B4AHWAcgB/wHgAdYByAH/AeAB1gHIAf8B4AHWAcgB/wM5AWCMAAGi
        AdUB6AH/AYcB3wH6Af8BgQHiAfgB/wGiAdUB6AH/ASEBlAGtAf8BNAGwAccB/wE6Ab0B1QH/ATcBxwHh
        Af8BMQHPAesB/wFHAdYB7QH/AYoB2gHuAf8DGgEkAxQBGwMNARIDBgEIDAAB8AHrAeQB/wHgAdYByAH/
        AeAB1gHIAf8B4AHWAcgB/wHgAdYByAH/AeAB1gHIAf8B4AHWAcgB/wHgAdYByAH/AeAB1gHIAf8B4AHW
        AcgB/wM5AWCMAAGlAdcB6gH/AY4B4QH7Af8BjQHnAfoB/wGfAdkB7QH/ASQBlAGuAf8BNgGtAcUB/wFC
        AcAB1wH/AUEByAHgAf8BPgHSAewB/wFSAdkB7wH/AY4B3AHuAf8DDQERAwcBCgMCAQMQAAHwAesB5AH/
        AeAB1gHIAf8B4AHWAcgB/wHgAdYByAH/AeAB1gHIAf8B4AHWAcgB/wHgAdYByAH/AeAB1gHIAf8B4AHW
        AcgB/wHgAdYByAH/AzkBYIwAAagB2QHrAf8BlQHlAf0B/wGaAe0B/AH/AZYB6gH6Af8BJwGVAa4B/wE7
        AawBxQH/AUoBwwHZAf8BSgHMAeIB/wFLAdcB7wH/AYAB3QHwAf8DUAGbAwIBAxgAAfAB6wHkAf8B4AHW
        AcgB/wHgAdYByAH/AeAB1gHIAf8B4AHWAcgB/wHgAdYByAH/AeAB1gHIAf8B4AHWAcgB/wHgAdYByAH/
        AeAB1gHIAf8DOQFgjAABqwHaAe0B/wGbAecB/QH/AaYB8gH9Af8BrgHxAf0B/wErAZcBrwH/AUABrwHG
        Af8BUQHHAdsB/wFUAdAB5QH/AVgB2wHxAf8BogHmAfUB/wMEAQYcAAHwAesB5AH/AeAB1gHIAf8B4AHW
        AcgB/wHgAdYByAH/AeAB1gHIAf8B4AHWAcgB/wHgAdYByAH/AeAB1gHIAf8B4AHWAcgB/wHgAdYByAH/
        AzkBYIwAAa4B3AHvAf8BngHpAf4B/wGvAfYC/wHBAfYB/gH/AS8BmAGwAf8BRQGzAccB/wFZAckB3gH/
        AYMB1AHoAf8BhwHeAfIB/wGtAeoB9wH/IAAB8AHrAeQB/wHgAdYByAH/AeAB1gHIAf8B4AHWAcgB/wHg
        AdYByAH/AeAB1gHIAf8B4AHWAcgB/wHgAdYByAH/AeAB1gHIAf8B4AHWAcgB/wM5AWCMAAGxAd4B8AH/
        AZ4B6QH+Af8BsgH3Av8B0gH6Av8BMgGaAbIB/wFLAbUBygH/AYQBzQHfAf8BigHYAeoB/wGRAeEB9AH/
        AbwB7gH5Af8gAAHwAesB5AH/AeAB1gHIAf8B4AHWAcgB/wHgAdYByAH/AeAB1gHIAf8B4AHWAcgB/wHg
        AdYByAH/AeAB1gHIAf8B4AHWAcgB/wHgAdYByAH/AzkBYIwAAbQB4AHyAf8BngHpAf4B/wGyAfcC/wHe
        AfwC/wE2AZ0BswH/AVIBugHNAf8BigHRAeIB/wGRAdsB7AH/AZoB5AH1Af8BygHyAfoB/yAAA/0B/wP9
        Af8D/QH/A/0B/wP8Af8D/AH/A/wB/wOyAf8DqQH/A68B/wMlATeMAAG2AeIB8wH/AZ4B6QH+Af8BsgH3
        Av8B/AP/AT0BogG4Af8BgAHEAdYB/wGSAdUB5gH/AZkB3gHvAf8BoAHnAfYB/wHPAfMB+gH/IAAD/gH/
        Af0C/gH/A/0B/wH8Av0B/wP8Af8D/AH/AfsC/AH/A84B/wPrAf8DRgF/AwIBA4wAAbkB4wH0Af8BngHp
        Af4B/wGyAfcC/wH6Af4C/wFOAbUBxwH/AYwBzgHeAf8BogHmAfQB/wGoAekB9wH/AasB6gH3Af8B1wH1
        AfwB/yAAAf8C/gH/BAAD/QH/BAAB/AL9Af8EAAP8Af8DwwH/A0YBfgMCAQOQAAG7AeUB9QH/AZ4B6QH+
        Af8BzwH5Af4B/wGZAc0B3wH/AZIB2AHnAf8BqAHrAfcB/wGxAe0B+QH/AcQB8gH7Af8B3wH4Af0B/wHe
        AfgB/QH/IAAD1gH/AfYC8wH/A9YB/wH2AvMB/wPWAf8B9gLzAf8D1gH/AcMCwQH/AwIBA5QAAbwB5gH2
        Af8BtQHwAfwB/wGlAdgB5QH/AboB7gH3Af8BuQHwAfgB/wGpAewB9wH/AVkBYAFiAfUDUQGfAzoBYAML
        AQ/YAAMdASoDRgF/AxIBGPAAAUIBTQE+BwABPgMAASgDAAFAAwABEAMAAQEBAAEBBQABgBcAA/8BAAHj
        Af8B4AEDBAABwAEDAeABAwQAAcABAQHgAQMEAAGAAQAB4AEDBAABgAEAAeABAwQAAYABAQHgAQMEAAGA
        AQcB4AEDBAABgAEPAeABAwQAAYABHwHgAQMEAAGAAR8B4AEDBAABgAEfAeABAwQAAYABHwHgAQMEAAGA
        AR8B6gGHBAABgAEfAeABDwQAAYABHwL/BAABjwP/BAAL
</value>
  </data>
</root>